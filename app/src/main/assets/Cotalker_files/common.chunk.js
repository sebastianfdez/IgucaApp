webpackJsonp(["common"],{

/***/ "./node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.es5.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfiniteScrollDirective\", function() { return InfiniteScrollDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfiniteScrollModule\", function() { return InfiniteScrollModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_fromEvent__ = __webpack_require__(\"./node_modules/rxjs/_esm5/add/observable/fromEvent.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_of__ = __webpack_require__(\"./node_modules/rxjs/_esm5/add/observable/of.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_filter__ = __webpack_require__(\"./node_modules/rxjs/_esm5/add/operator/filter.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_mergeMap__ = __webpack_require__(\"./node_modules/rxjs/_esm5/add/operator/mergeMap.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_sampleTime__ = __webpack_require__(\"./node_modules/rxjs/_esm5/add/operator/sampleTime.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__ = __webpack_require__(\"./node_modules/rxjs/_esm5/Observable.js\");\n\n\n\n\n\n\n\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    var /** @type {?} */ hasWindow = window && !!window.document && window.document.documentElement;\n    var /** @type {?} */ container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        var /** @type {?} */ containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    var /** @type {?} */ rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\nvar AxisResolver = (function () {\n    /**\n     * @param {?=} vertical\n     */\n    function AxisResolver(vertical) {\n        if (vertical === void 0) { vertical = true; }\n        this.vertical = vertical;\n    }\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.clientHeightKey = function () { return this.vertical ? 'clientHeight' : 'clientWidth'; };\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.offsetHeightKey = function () { return this.vertical ? 'offsetHeight' : 'offsetWidth'; };\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.scrollHeightKey = function () { return this.vertical ? 'scrollHeight' : 'scrollWidth'; };\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.pageYOffsetKey = function () { return this.vertical ? 'pageYOffset' : 'pageXOffset'; };\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.offsetTopKey = function () { return this.vertical ? 'offsetTop' : 'offsetLeft'; };\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.scrollTopKey = function () { return this.vertical ? 'scrollTop' : 'scrollLeft'; };\n    /**\n     * @return {?}\n     */\n    AxisResolver.prototype.topKey = function () { return this.vertical ? 'top' : 'left'; };\n    return AxisResolver;\n}());\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction shouldTriggerEvents(_a) {\n    var alwaysCallback = _a.alwaysCallback, shouldScroll = _a.shouldScroll, disable = _a.disable;\n    return (alwaysCallback || shouldScroll) && !disable;\n}\n/**\n * @param {?} callbacks\n * @param {?} isScrollingDown\n * @param {?} scrolledUntilNow\n * @return {?}\n */\nfunction triggerEvents(callbacks, isScrollingDown, scrolledUntilNow) {\n    var /** @type {?} */ eventData = {\n        currentScrollPosition: scrolledUntilNow\n    };\n    var /** @type {?} */ callback = isScrollingDown ? callbacks.down : callbacks.up;\n    callback(eventData);\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver(_a) {\n    var isWindow = _a.isWindow, windowElement = _a.windowElement, axis = _a.axis;\n    return createResolverWithContainer({\n        axis: axis,\n        isWindow: isWindow\n    }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    var /** @type {?} */ container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign({}, resolver, { container: container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    var /** @type {?} */ isWindow = ['Window', 'global'].some(function (obj) { return Object.prototype.toString.call(windowElement).includes(obj); });\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    var /** @type {?} */ height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    var axis = resolver.axis, container = resolver.container, isWindow = resolver.isWindow;\n    var _a = extractHeightPropKeys(axis), offsetHeightKey = _a.offsetHeightKey, clientHeightKey = _a.clientHeightKey;\n    // scrolled until now / current y point\n    var /** @type {?} */ scrolledUntilNow = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    var /** @type {?} */ nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    var /** @type {?} */ totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height: height, scrolledUntilNow: scrolledUntilNow, totalToScroll: totalToScroll };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    var axis = resolver.axis, container = resolver.container;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    var /** @type {?} */ scrolledUntilNow = container[axis.scrollTopKey()];\n    var /** @type {?} */ totalToScroll = container[axis.scrollHeightKey()];\n    return { height: height, scrolledUntilNow: scrolledUntilNow, totalToScroll: totalToScroll };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement(_a) {\n    var container = _a.container, isWindow = _a.isWindow, axis = _a.axis;\n    var _b = extractHeightPropKeys(axis), offsetHeightKey = _b.offsetHeightKey, clientHeightKey = _b.clientHeightKey;\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        return getDocumentElement(isWindow, elem)[clientHeightKey];\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    var /** @type {?} */ topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    var /** @type {?} */ pageYOffset = axis.pageYOffsetKey();\n    var /** @type {?} */ scrollTop = axis.scrollTopKey();\n    var /** @type {?} */ offsetTop = axis.offsetTopKey();\n    if (isNaN(window[pageYOffset])) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n/**\n * @param {?} container\n * @param {?} config\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldScroll(container, config, scrollingDown) {\n    var /** @type {?} */ distance = config.distance;\n    var /** @type {?} */ remaining;\n    var /** @type {?} */ containerBreakpoint;\n    if (scrollingDown) {\n        remaining = container.totalToScroll - container.scrolledUntilNow;\n        containerBreakpoint = container.height * distance.down + 1;\n    }\n    else {\n        remaining = container.scrolledUntilNow;\n        containerBreakpoint = container.height * distance.up + 1;\n    }\n    var /** @type {?} */ shouldScroll = remaining <= containerBreakpoint;\n    return shouldScroll;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolledUntilNow;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} config\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, config) {\n    var /** @type {?} */ isScrollingDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        shouldScroll: shouldScroll(container, config, isScrollingDown),\n        isScrollingDown: isScrollingDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} lastPositionState\n * @return {?}\n */\nfunction updateScrollPosition(position, lastPositionState) {\n    return (lastPositionState.last = position);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__[\"Observable\"].fromEvent(options.container, 'scroll')\n        .sampleTime(options.throttleDuration)\n        .mergeMap(function (ev) { return __WEBPACK_IMPORTED_MODULE_6_rxjs_Observable__[\"Observable\"].of(options.mergeMap(ev)); })\n        .subscribe(options.scrollHandler);\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    var /** @type {?} */ containerElement = resolveContainerElement(config.scrollContainer, config.scrollWindow, config.element, config.fromRoot);\n    var /** @type {?} */ resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        isWindow: isElementWindow(containerElement),\n        windowElement: containerElement\n    });\n    var /** @type {?} */ scrollPosition = {\n        last: 0\n    };\n    var /** @type {?} */ options = {\n        container: resolver.container,\n        mergeMap: function () { return calculatePoints(config.element, resolver); },\n        scrollHandler: function (positionStats) { return handleOnScroll(scrollPosition, positionStats, config); },\n        throttleDuration: config.throttle\n    };\n    return attachScrollEvent(options);\n}\n/**\n * @param {?} scrollPosition\n * @param {?} positionStats\n * @param {?} config\n * @return {?}\n */\nfunction handleOnScroll(scrollPosition, positionStats, config) {\n    var /** @type {?} */ distance = {\n        down: config.downDistance,\n        up: config.upDistance\n    };\n    var _a = getScrollStats(scrollPosition.last, positionStats, {\n        distance: distance\n    }), isScrollingDown = _a.isScrollingDown, shouldScroll$$1 = _a.shouldScroll;\n    var /** @type {?} */ scrollConfig = {\n        alwaysCallback: config.alwaysCallback,\n        disable: config.disable,\n        shouldScroll: shouldScroll$$1\n    };\n    updateScrollPosition(positionStats.scrolledUntilNow, scrollPosition);\n    if (shouldTriggerEvents(scrollConfig)) {\n        triggerEvents(config.events, isScrollingDown, positionStats.scrolledUntilNow);\n    }\n}\nvar InfiniteScrollDirective = (function () {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    function InfiniteScrollDirective(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.scrolledUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 300;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    InfiniteScrollDirective.prototype.ngAfterViewInit = function () {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    InfiniteScrollDirective.prototype.ngOnChanges = function (_a) {\n        var infiniteScrollContainer = _a.infiniteScrollContainer, infiniteScrollDisabled = _a.infiniteScrollDisabled, infiniteScrollDistance = _a.infiniteScrollDistance;\n        var /** @type {?} */ containerChanged = inputPropChanged(infiniteScrollContainer);\n        var /** @type {?} */ disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        var /** @type {?} */ distanceChanged = inputPropChanged(infiniteScrollDistance);\n        var /** @type {?} */ shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    InfiniteScrollDirective.prototype.setup = function () {\n        var _this = this;\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular(function () {\n                _this.disposeScroller = createScroller({\n                    fromRoot: _this.fromRoot,\n                    alwaysCallback: _this.alwaysCallback,\n                    disable: _this.infiniteScrollDisabled,\n                    downDistance: _this.infiniteScrollDistance,\n                    element: _this.element,\n                    events: {\n                        // tslint:disable-next-line:arrow-parens\n                        down: function (event) { return _this.zone.run(function () { return _this.scrolled.emit(event); }); },\n                        // tslint:disable-next-line:arrow-parens\n                        up: function (event) { return _this.zone.run(function () { return _this.scrolledUp.emit(event); }); }\n                    },\n                    horizontal: _this.horizontal,\n                    scrollContainer: _this.infiniteScrollContainer,\n                    scrollWindow: _this.scrollWindow,\n                    throttle: _this.infiniteScrollThrottle,\n                    upDistance: _this.infiniteScrollUpDistance\n                });\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    InfiniteScrollDirective.prototype.ngOnDestroy = function () {\n        this.destroyScroller();\n    };\n    /**\n     * @return {?}\n     */\n    InfiniteScrollDirective.prototype.destroyScroller = function () {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    };\n    return InfiniteScrollDirective;\n}());\nInfiniteScrollDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            },] },\n];\n/**\n * @nocollapse\n */\nInfiniteScrollDirective.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\nInfiniteScrollDirective.propDecorators = {\n    'scrolled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'scrolledUp': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'infiniteScrollDistance': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'infiniteScrollUpDistance': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'infiniteScrollThrottle': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'infiniteScrollDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'infiniteScrollContainer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'scrollWindow': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'immediateCheck': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'horizontal': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'alwaysCallback': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'fromRoot': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar InfiniteScrollModule = (function () {\n    function InfiniteScrollModule() {\n    }\n    return InfiniteScrollModule;\n}());\nInfiniteScrollModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            },] },\n];\n/**\n * @nocollapse\n */\nInfiniteScrollModule.ctorParameters = function () { return []; };\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=ngx-infinite-scroll.es5.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.es5.js\n");

/***/ }),

/***/ "./node_modules/rxjs/_esm5/add/operator/filter.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\"./node_modules/rxjs/_esm5/Observable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operator_filter__ = __webpack_require__(\"./node_modules/rxjs/_esm5/operator/filter.js\");\n/** PURE_IMPORTS_START .._.._Observable,.._.._operator_filter PURE_IMPORTS_END */\n\n\n__WEBPACK_IMPORTED_MODULE_0__Observable__[\"Observable\"].prototype.filter = __WEBPACK_IMPORTED_MODULE_1__operator_filter__[\"a\" /* filter */];\n//# sourceMappingURL=filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvYWRkL29wZXJhdG9yL2ZpbHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUNxQjtBQUNKO0FBQ2pCO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcnhqcy9fZXNtNS9hZGQvb3BlcmF0b3IvZmlsdGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIFBVUkVfSU1QT1JUU19TVEFSVCAuLl8uLl9PYnNlcnZhYmxlLC4uXy4uX29wZXJhdG9yX2ZpbHRlciBQVVJFX0lNUE9SVFNfRU5EICovXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICcuLi8uLi9vcGVyYXRvci9maWx0ZXInO1xuT2JzZXJ2YWJsZS5wcm90b3R5cGUuZmlsdGVyID0gZmlsdGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsdGVyLmpzLm1hcFxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcnhqcy9fZXNtNS9hZGQvb3BlcmF0b3IvZmlsdGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9yeGpzL19lc201L2FkZC9vcGVyYXRvci9maWx0ZXIuanNcbi8vIG1vZHVsZSBjaHVua3MgPSBjb21tb24iXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./node_modules/rxjs/_esm5/add/operator/filter.js\n");

/***/ }),

/***/ "./node_modules/rxjs/_esm5/add/operator/mergeMap.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\"./node_modules/rxjs/_esm5/Observable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operator_mergeMap__ = __webpack_require__(\"./node_modules/rxjs/_esm5/operator/mergeMap.js\");\n/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mergeMap PURE_IMPORTS_END */\n\n\n__WEBPACK_IMPORTED_MODULE_0__Observable__[\"Observable\"].prototype.mergeMap = __WEBPACK_IMPORTED_MODULE_1__operator_mergeMap__[\"a\" /* mergeMap */];\n__WEBPACK_IMPORTED_MODULE_0__Observable__[\"Observable\"].prototype.flatMap = __WEBPACK_IMPORTED_MODULE_1__operator_mergeMap__[\"a\" /* mergeMap */];\n//# sourceMappingURL=mergeMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvYWRkL29wZXJhdG9yL21lcmdlTWFwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBO0FBQ3FCO0FBQ0Y7QUFDbkI7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvYWRkL29wZXJhdG9yL21lcmdlTWFwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIFBVUkVfSU1QT1JUU19TVEFSVCAuLl8uLl9PYnNlcnZhYmxlLC4uXy4uX29wZXJhdG9yX21lcmdlTWFwIFBVUkVfSU1QT1JUU19FTkQgKi9cbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICcuLi8uLi9PYnNlcnZhYmxlJztcbmltcG9ydCB7IG1lcmdlTWFwIH0gZnJvbSAnLi4vLi4vb3BlcmF0b3IvbWVyZ2VNYXAnO1xuT2JzZXJ2YWJsZS5wcm90b3R5cGUubWVyZ2VNYXAgPSBtZXJnZU1hcDtcbk9ic2VydmFibGUucHJvdG90eXBlLmZsYXRNYXAgPSBtZXJnZU1hcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lcmdlTWFwLmpzLm1hcFxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcnhqcy9fZXNtNS9hZGQvb3BlcmF0b3IvbWVyZ2VNYXAuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvYWRkL29wZXJhdG9yL21lcmdlTWFwLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gY29tbW9uIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyJ9\n//# sourceURL=webpack-internal:///./node_modules/rxjs/_esm5/add/operator/mergeMap.js\n");

/***/ }),

/***/ "./node_modules/rxjs/_esm5/add/operator/sampleTime.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\"./node_modules/rxjs/_esm5/Observable.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operator_sampleTime__ = __webpack_require__(\"./node_modules/rxjs/_esm5/operator/sampleTime.js\");\n/** PURE_IMPORTS_START .._.._Observable,.._.._operator_sampleTime PURE_IMPORTS_END */\n\n\n__WEBPACK_IMPORTED_MODULE_0__Observable__[\"Observable\"].prototype.sampleTime = __WEBPACK_IMPORTED_MODULE_1__operator_sampleTime__[\"a\" /* sampleTime */];\n//# sourceMappingURL=sampleTime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvYWRkL29wZXJhdG9yL3NhbXBsZVRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFDcUI7QUFDQTtBQUNyQjtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvYWRkL29wZXJhdG9yL3NhbXBsZVRpbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogUFVSRV9JTVBPUlRTX1NUQVJUIC4uXy4uX09ic2VydmFibGUsLi5fLi5fb3BlcmF0b3Jfc2FtcGxlVGltZSBQVVJFX0lNUE9SVFNfRU5EICovXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAnLi4vLi4vT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBzYW1wbGVUaW1lIH0gZnJvbSAnLi4vLi4vb3BlcmF0b3Ivc2FtcGxlVGltZSc7XG5PYnNlcnZhYmxlLnByb3RvdHlwZS5zYW1wbGVUaW1lID0gc2FtcGxlVGltZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNhbXBsZVRpbWUuanMubWFwXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yeGpzL19lc201L2FkZC9vcGVyYXRvci9zYW1wbGVUaW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9yeGpzL19lc201L2FkZC9vcGVyYXRvci9zYW1wbGVUaW1lLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gY29tbW9uIl0sInNvdXJjZVJvb3QiOiJ3ZWJwYWNrOi8vLyJ9\n//# sourceURL=webpack-internal:///./node_modules/rxjs/_esm5/add/operator/sampleTime.js\n");

/***/ }),

/***/ "./node_modules/rxjs/_esm5/operator/sampleTime.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = sampleTime;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(\"./node_modules/rxjs/_esm5/scheduler/async.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operators_sampleTime__ = __webpack_require__(\"./node_modules/rxjs/_esm5/operators/sampleTime.js\");\n/** PURE_IMPORTS_START .._scheduler_async,.._operators_sampleTime PURE_IMPORTS_END */\n\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__[\"a\" /* async */];\n    }\n    return Object(__WEBPACK_IMPORTED_MODULE_1__operators_sampleTime__[\"a\" /* sampleTime */])(period, scheduler)(this);\n}\n//# sourceMappingURL=sampleTime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvb3BlcmF0b3Ivc2FtcGxlVGltZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBO0FBQUE7QUFDZ0I7QUFDb0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFNBQVM7QUFDVCxTQUFTO0FBQ1QsU0FBUztBQUNULFNBQVM7QUFDVDtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsVUFBVSx3QkFBd0IsaUJBQWlCO0FBQzlEO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcnhqcy9fZXNtNS9vcGVyYXRvci9zYW1wbGVUaW1lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIFBVUkVfSU1QT1JUU19TVEFSVCAuLl9zY2hlZHVsZXJfYXN5bmMsLi5fb3BlcmF0b3JzX3NhbXBsZVRpbWUgUFVSRV9JTVBPUlRTX0VORCAqL1xuaW1wb3J0IHsgYXN5bmMgfSBmcm9tICcuLi9zY2hlZHVsZXIvYXN5bmMnO1xuaW1wb3J0IHsgc2FtcGxlVGltZSBhcyBoaWdoZXJPcmRlciB9IGZyb20gJy4uL29wZXJhdG9ycy9zYW1wbGVUaW1lJztcbi8qKlxuICogRW1pdHMgdGhlIG1vc3QgcmVjZW50bHkgZW1pdHRlZCB2YWx1ZSBmcm9tIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSB3aXRoaW5cbiAqIHBlcmlvZGljIHRpbWUgaW50ZXJ2YWxzLlxuICpcbiAqIDxzcGFuIGNsYXNzPVwiaW5mb3JtYWxcIj5TYW1wbGVzIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBhdCBwZXJpb2RpYyB0aW1lXG4gKiBpbnRlcnZhbHMsIGVtaXR0aW5nIHdoYXQgaXQgc2FtcGxlcy48L3NwYW4+XG4gKlxuICogPGltZyBzcmM9XCIuL2ltZy9zYW1wbGVUaW1lLnBuZ1wiIHdpZHRoPVwiMTAwJVwiPlxuICpcbiAqIGBzYW1wbGVUaW1lYCBwZXJpb2RpY2FsbHkgbG9va3MgYXQgdGhlIHNvdXJjZSBPYnNlcnZhYmxlIGFuZCBlbWl0cyB3aGljaGV2ZXJcbiAqIHZhbHVlIGl0IGhhcyBtb3N0IHJlY2VudGx5IGVtaXR0ZWQgc2luY2UgdGhlIHByZXZpb3VzIHNhbXBsaW5nLCB1bmxlc3MgdGhlXG4gKiBzb3VyY2UgaGFzIG5vdCBlbWl0dGVkIGFueXRoaW5nIHNpbmNlIHRoZSBwcmV2aW91cyBzYW1wbGluZy4gVGhlIHNhbXBsaW5nXG4gKiBoYXBwZW5zIHBlcmlvZGljYWxseSBpbiB0aW1lIGV2ZXJ5IGBwZXJpb2RgIG1pbGxpc2Vjb25kcyAob3IgdGhlIHRpbWUgdW5pdFxuICogZGVmaW5lZCBieSB0aGUgb3B0aW9uYWwgYHNjaGVkdWxlcmAgYXJndW1lbnQpLiBUaGUgc2FtcGxpbmcgc3RhcnRzIGFzIHNvb24gYXNcbiAqIHRoZSBvdXRwdXQgT2JzZXJ2YWJsZSBpcyBzdWJzY3JpYmVkLlxuICpcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkV2ZXJ5IHNlY29uZCwgZW1pdCB0aGUgbW9zdCByZWNlbnQgY2xpY2sgYXQgbW9zdCBvbmNlPC9jYXB0aW9uPlxuICogdmFyIGNsaWNrcyA9IFJ4Lk9ic2VydmFibGUuZnJvbUV2ZW50KGRvY3VtZW50LCAnY2xpY2snKTtcbiAqIHZhciByZXN1bHQgPSBjbGlja3Muc2FtcGxlVGltZSgxMDAwKTtcbiAqIHJlc3VsdC5zdWJzY3JpYmUoeCA9PiBjb25zb2xlLmxvZyh4KSk7XG4gKlxuICogQHNlZSB7QGxpbmsgYXVkaXRUaW1lfVxuICogQHNlZSB7QGxpbmsgZGVib3VuY2VUaW1lfVxuICogQHNlZSB7QGxpbmsgZGVsYXl9XG4gKiBAc2VlIHtAbGluayBzYW1wbGV9XG4gKiBAc2VlIHtAbGluayB0aHJvdHRsZVRpbWV9XG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHBlcmlvZCBUaGUgc2FtcGxpbmcgcGVyaW9kIGV4cHJlc3NlZCBpbiBtaWxsaXNlY29uZHMgb3IgdGhlXG4gKiB0aW1lIHVuaXQgZGV0ZXJtaW5lZCBpbnRlcm5hbGx5IGJ5IHRoZSBvcHRpb25hbCBgc2NoZWR1bGVyYC5cbiAqIEBwYXJhbSB7U2NoZWR1bGVyfSBbc2NoZWR1bGVyPWFzeW5jXSBUaGUge0BsaW5rIElTY2hlZHVsZXJ9IHRvIHVzZSBmb3JcbiAqIG1hbmFnaW5nIHRoZSB0aW1lcnMgdGhhdCBoYW5kbGUgdGhlIHNhbXBsaW5nLlxuICogQHJldHVybiB7T2JzZXJ2YWJsZTxUPn0gQW4gT2JzZXJ2YWJsZSB0aGF0IGVtaXRzIHRoZSByZXN1bHRzIG9mIHNhbXBsaW5nIHRoZVxuICogdmFsdWVzIGVtaXR0ZWQgYnkgdGhlIHNvdXJjZSBPYnNlcnZhYmxlIGF0IHRoZSBzcGVjaWZpZWQgdGltZSBpbnRlcnZhbC5cbiAqIEBtZXRob2Qgc2FtcGxlVGltZVxuICogQG93bmVyIE9ic2VydmFibGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhbXBsZVRpbWUocGVyaW9kLCBzY2hlZHVsZXIpIHtcbiAgICBpZiAoc2NoZWR1bGVyID09PSB2b2lkIDApIHtcbiAgICAgICAgc2NoZWR1bGVyID0gYXN5bmM7XG4gICAgfVxuICAgIHJldHVybiBoaWdoZXJPcmRlcihwZXJpb2QsIHNjaGVkdWxlcikodGhpcyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zYW1wbGVUaW1lLmpzLm1hcFxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcnhqcy9fZXNtNS9vcGVyYXRvci9zYW1wbGVUaW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9yeGpzL19lc201L29wZXJhdG9yL3NhbXBsZVRpbWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSBjb21tb24iXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./node_modules/rxjs/_esm5/operator/sampleTime.js\n");

/***/ }),

/***/ "./node_modules/rxjs/_esm5/operators/sampleTime.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = sampleTime;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\"./node_modules/rxjs/_esm5/Subscriber.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(\"./node_modules/rxjs/_esm5/scheduler/async.js\");\n/** PURE_IMPORTS_START .._Subscriber,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__[\"a\" /* async */];\n    }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar SampleTimeOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\"a\" /* Subscriber */]));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvb3BlcmF0b3JzL3NhbXBsZVRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0JBQXNCO0FBQ3pDO0FBQ0E7QUFDcUI7QUFDTDtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsU0FBUztBQUNULFNBQVM7QUFDVCxTQUFTO0FBQ1QsU0FBUztBQUNUO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsV0FBVyxVQUFVLHdCQUF3QixpQkFBaUI7QUFDOUQ7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwrREFBK0Q7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsbUNBQW1DO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcnhqcy9fZXNtNS9vcGVyYXRvcnMvc2FtcGxlVGltZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBQVVJFX0lNUE9SVFNfU1RBUlQgLi5fU3Vic2NyaWJlciwuLl9zY2hlZHVsZXJfYXN5bmMgUFVSRV9JTVBPUlRTX0VORCAqL1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCBmdW5jdGlvbiAoZCwgYikge1xuICAgIGZvciAodmFyIHAgaW4gYilcbiAgICAgICAgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpXG4gICAgICAgICAgICBkW3BdID0gYltwXTtcbiAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG59O1xuaW1wb3J0IHsgU3Vic2NyaWJlciB9IGZyb20gJy4uL1N1YnNjcmliZXInO1xuaW1wb3J0IHsgYXN5bmMgfSBmcm9tICcuLi9zY2hlZHVsZXIvYXN5bmMnO1xuLyoqXG4gKiBFbWl0cyB0aGUgbW9zdCByZWNlbnRseSBlbWl0dGVkIHZhbHVlIGZyb20gdGhlIHNvdXJjZSBPYnNlcnZhYmxlIHdpdGhpblxuICogcGVyaW9kaWMgdGltZSBpbnRlcnZhbHMuXG4gKlxuICogPHNwYW4gY2xhc3M9XCJpbmZvcm1hbFwiPlNhbXBsZXMgdGhlIHNvdXJjZSBPYnNlcnZhYmxlIGF0IHBlcmlvZGljIHRpbWVcbiAqIGludGVydmFscywgZW1pdHRpbmcgd2hhdCBpdCBzYW1wbGVzLjwvc3Bhbj5cbiAqXG4gKiA8aW1nIHNyYz1cIi4vaW1nL3NhbXBsZVRpbWUucG5nXCIgd2lkdGg9XCIxMDAlXCI+XG4gKlxuICogYHNhbXBsZVRpbWVgIHBlcmlvZGljYWxseSBsb29rcyBhdCB0aGUgc291cmNlIE9ic2VydmFibGUgYW5kIGVtaXRzIHdoaWNoZXZlclxuICogdmFsdWUgaXQgaGFzIG1vc3QgcmVjZW50bHkgZW1pdHRlZCBzaW5jZSB0aGUgcHJldmlvdXMgc2FtcGxpbmcsIHVubGVzcyB0aGVcbiAqIHNvdXJjZSBoYXMgbm90IGVtaXR0ZWQgYW55dGhpbmcgc2luY2UgdGhlIHByZXZpb3VzIHNhbXBsaW5nLiBUaGUgc2FtcGxpbmdcbiAqIGhhcHBlbnMgcGVyaW9kaWNhbGx5IGluIHRpbWUgZXZlcnkgYHBlcmlvZGAgbWlsbGlzZWNvbmRzIChvciB0aGUgdGltZSB1bml0XG4gKiBkZWZpbmVkIGJ5IHRoZSBvcHRpb25hbCBgc2NoZWR1bGVyYCBhcmd1bWVudCkuIFRoZSBzYW1wbGluZyBzdGFydHMgYXMgc29vbiBhc1xuICogdGhlIG91dHB1dCBPYnNlcnZhYmxlIGlzIHN1YnNjcmliZWQuXG4gKlxuICogQGV4YW1wbGUgPGNhcHRpb24+RXZlcnkgc2Vjb25kLCBlbWl0IHRoZSBtb3N0IHJlY2VudCBjbGljayBhdCBtb3N0IG9uY2U8L2NhcHRpb24+XG4gKiB2YXIgY2xpY2tzID0gUnguT2JzZXJ2YWJsZS5mcm9tRXZlbnQoZG9jdW1lbnQsICdjbGljaycpO1xuICogdmFyIHJlc3VsdCA9IGNsaWNrcy5zYW1wbGVUaW1lKDEwMDApO1xuICogcmVzdWx0LnN1YnNjcmliZSh4ID0+IGNvbnNvbGUubG9nKHgpKTtcbiAqXG4gKiBAc2VlIHtAbGluayBhdWRpdFRpbWV9XG4gKiBAc2VlIHtAbGluayBkZWJvdW5jZVRpbWV9XG4gKiBAc2VlIHtAbGluayBkZWxheX1cbiAqIEBzZWUge0BsaW5rIHNhbXBsZX1cbiAqIEBzZWUge0BsaW5rIHRocm90dGxlVGltZX1cbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gcGVyaW9kIFRoZSBzYW1wbGluZyBwZXJpb2QgZXhwcmVzc2VkIGluIG1pbGxpc2Vjb25kcyBvciB0aGVcbiAqIHRpbWUgdW5pdCBkZXRlcm1pbmVkIGludGVybmFsbHkgYnkgdGhlIG9wdGlvbmFsIGBzY2hlZHVsZXJgLlxuICogQHBhcmFtIHtTY2hlZHVsZXJ9IFtzY2hlZHVsZXI9YXN5bmNdIFRoZSB7QGxpbmsgSVNjaGVkdWxlcn0gdG8gdXNlIGZvclxuICogbWFuYWdpbmcgdGhlIHRpbWVycyB0aGF0IGhhbmRsZSB0aGUgc2FtcGxpbmcuXG4gKiBAcmV0dXJuIHtPYnNlcnZhYmxlPFQ+fSBBbiBPYnNlcnZhYmxlIHRoYXQgZW1pdHMgdGhlIHJlc3VsdHMgb2Ygc2FtcGxpbmcgdGhlXG4gKiB2YWx1ZXMgZW1pdHRlZCBieSB0aGUgc291cmNlIE9ic2VydmFibGUgYXQgdGhlIHNwZWNpZmllZCB0aW1lIGludGVydmFsLlxuICogQG1ldGhvZCBzYW1wbGVUaW1lXG4gKiBAb3duZXIgT2JzZXJ2YWJsZVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2FtcGxlVGltZShwZXJpb2QsIHNjaGVkdWxlcikge1xuICAgIGlmIChzY2hlZHVsZXIgPT09IHZvaWQgMCkge1xuICAgICAgICBzY2hlZHVsZXIgPSBhc3luYztcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChzb3VyY2UpIHsgcmV0dXJuIHNvdXJjZS5saWZ0KG5ldyBTYW1wbGVUaW1lT3BlcmF0b3IocGVyaW9kLCBzY2hlZHVsZXIpKTsgfTtcbn1cbnZhciBTYW1wbGVUaW1lT3BlcmF0b3IgPSAvKkBfX1BVUkVfXyovICgvKkBfX1BVUkVfXyovIGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTYW1wbGVUaW1lT3BlcmF0b3IocGVyaW9kLCBzY2hlZHVsZXIpIHtcbiAgICAgICAgdGhpcy5wZXJpb2QgPSBwZXJpb2Q7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVyID0gc2NoZWR1bGVyO1xuICAgIH1cbiAgICBTYW1wbGVUaW1lT3BlcmF0b3IucHJvdG90eXBlLmNhbGwgPSBmdW5jdGlvbiAoc3Vic2NyaWJlciwgc291cmNlKSB7XG4gICAgICAgIHJldHVybiBzb3VyY2Uuc3Vic2NyaWJlKG5ldyBTYW1wbGVUaW1lU3Vic2NyaWJlcihzdWJzY3JpYmVyLCB0aGlzLnBlcmlvZCwgdGhpcy5zY2hlZHVsZXIpKTtcbiAgICB9O1xuICAgIHJldHVybiBTYW1wbGVUaW1lT3BlcmF0b3I7XG59KCkpO1xuLyoqXG4gKiBXZSBuZWVkIHRoaXMgSlNEb2MgY29tbWVudCBmb3IgYWZmZWN0aW5nIEVTRG9jLlxuICogQGlnbm9yZVxuICogQGV4dGVuZHMge0lnbm9yZWR9XG4gKi9cbnZhciBTYW1wbGVUaW1lU3Vic2NyaWJlciA9IC8qQF9fUFVSRV9fKi8gKC8qQF9fUFVSRV9fKi8gZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTYW1wbGVUaW1lU3Vic2NyaWJlciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTYW1wbGVUaW1lU3Vic2NyaWJlcihkZXN0aW5hdGlvbiwgcGVyaW9kLCBzY2hlZHVsZXIpIHtcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcywgZGVzdGluYXRpb24pO1xuICAgICAgICB0aGlzLnBlcmlvZCA9IHBlcmlvZDtcbiAgICAgICAgdGhpcy5zY2hlZHVsZXIgPSBzY2hlZHVsZXI7XG4gICAgICAgIHRoaXMuaGFzVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5hZGQoc2NoZWR1bGVyLnNjaGVkdWxlKGRpc3BhdGNoTm90aWZpY2F0aW9uLCBwZXJpb2QsIHsgc3Vic2NyaWJlcjogdGhpcywgcGVyaW9kOiBwZXJpb2QgfSkpO1xuICAgIH1cbiAgICBTYW1wbGVUaW1lU3Vic2NyaWJlci5wcm90b3R5cGUuX25leHQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdGhpcy5sYXN0VmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5oYXNWYWx1ZSA9IHRydWU7XG4gICAgfTtcbiAgICBTYW1wbGVUaW1lU3Vic2NyaWJlci5wcm90b3R5cGUubm90aWZ5TmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuaGFzVmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuaGFzVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuZGVzdGluYXRpb24ubmV4dCh0aGlzLmxhc3RWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBTYW1wbGVUaW1lU3Vic2NyaWJlcjtcbn0oU3Vic2NyaWJlcikpO1xuZnVuY3Rpb24gZGlzcGF0Y2hOb3RpZmljYXRpb24oc3RhdGUpIHtcbiAgICB2YXIgc3Vic2NyaWJlciA9IHN0YXRlLnN1YnNjcmliZXIsIHBlcmlvZCA9IHN0YXRlLnBlcmlvZDtcbiAgICBzdWJzY3JpYmVyLm5vdGlmeU5leHQoKTtcbiAgICB0aGlzLnNjaGVkdWxlKHN0YXRlLCBwZXJpb2QpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FtcGxlVGltZS5qcy5tYXBcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvb3BlcmF0b3JzL3NhbXBsZVRpbWUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL3J4anMvX2VzbTUvb3BlcmF0b3JzL3NhbXBsZVRpbWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSBjb21tb24iXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIn0=\n//# sourceURL=webpack-internal:///./node_modules/rxjs/_esm5/operators/sampleTime.js\n");

/***/ }),

/***/ "./src/app/features/knowledge-base/knowledge-base/knowledgebase.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\nvar http_1 = __webpack_require__(\"./node_modules/@angular/common/esm5/http.js\");\nvar Observable_1 = __webpack_require__(\"./node_modules/rxjs/_esm5/Observable.js\");\nvar environment_1 = __webpack_require__(\"./src/environments/environment.ts\");\nvar Subject_1 = __webpack_require__(\"./node_modules/rxjs/_esm5/Subject.js\");\nvar KnowledgebaseService = (function () {\n    function KnowledgebaseService(http) {\n        this.http = http;\n        this.apiURL = environment_1.environment.REST_API_URL + \"/api\";\n        this.kbFeed = [];\n        this.kbFeedSub = new Subject_1.Subject();\n        this.kbFeedSub$ = this.kbFeedSub.asObservable();\n        this.kbStats = {};\n        this.kbStatsSub = new Subject_1.Subject();\n        this.kbStatsSub$ = this.kbStatsSub.asObservable();\n        this.allAreas = [];\n        this.questionDeletedSub = new Subject_1.Subject();\n        this.questionDeletedSub$ = this.questionDeletedSub.asObservable();\n        this.allQuestionsAsked = false;\n        this.getInitialFeed().subscribe();\n        this.getInitialStats().subscribe();\n    }\n    KnowledgebaseService.prototype.clear = function () {\n        this.kbFeed = [];\n        this.kbStats = {};\n        this.allAreas = [];\n        this.allQuestionsAsked = false;\n    };\n    KnowledgebaseService.prototype.createQuestion = function (content) {\n        return this.http.post(this.apiURL + \"/uservices/bots/knowledgebase/contents\", content)\n            .catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.deleteQuestion = function (id) {\n        var _this = this;\n        var content = { status: 'closed' };\n        return this.http.patch(this.apiURL + \"/uservices/bots/knowledgebase/contents/\" + id, content).map(function (data) {\n            data.status = 'closed';\n            _this.questionDeletedSub.next(data);\n            return data;\n        }).catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.editQuestion = function (content, id) {\n        return this.http.patch(this.apiURL + \"/uservices/bots/knowledgebase/contents/\" + id, content).map(function (data) {\n            return data;\n        }).catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.receiveFeedKB = function (tags, area, search, page) {\n        var _this = this;\n        var params = {};\n        params.limit = 15;\n        params.page = 0;\n        if (tags && tags.length) {\n            params.tags = tags;\n        }\n        if (page) {\n            params.page = page;\n        }\n        if (area && area.length > 0) {\n            params.relations = area;\n        }\n        if (search && search.length) {\n            var searching_1 = '';\n            search.forEach(function (word) {\n                searching_1 += word + \" \";\n            });\n            params.search = searching_1;\n            params.limit = 10000;\n        }\n        return this.http.get(this.apiURL + \"/uservices/bots/knowledgebase/contents?statuses=active\", { params: params })\n            .map(function (data) {\n            if (search && search.length || data.length < 15) {\n                _this.allQuestionsAsked = true;\n            }\n            else {\n                _this.allQuestionsAsked = false;\n            }\n            return data;\n        })\n            .catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.receiveMetrics = function () {\n        return this.http.get(this.apiURL + \"/uservices/bots/knowledgebase/metrics\")\n            .catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.receiveMetricsArea = function (relation) {\n        var params = {};\n        params.expertRelation = relation._id;\n        return this.http.get(this.apiURL + \"/uservices/bots/knowledgebase/metricsArea\", { params: params })\n            .catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.receiveStats = function (tags, area, search) {\n        var params = {};\n        if (tags && tags.length) {\n            params.tags = tags;\n        }\n        if (area && area.length) {\n            params.relations = area;\n        }\n        if (search && search.length) {\n            params.search = search;\n        }\n        return this.http.get(this.apiURL + \"/uservices/bots/knowledgebase/stats?statuses=active&intersection=1\", { params: params })\n            .catch(this.handleError);\n    };\n    KnowledgebaseService.prototype.getChartsInfoHistoric = function (answeredQuestionsList) {\n        var today = (new Date()).getTime();\n        var days = 30;\n        // Historical answers\n        var areaQuestions = [];\n        answeredQuestionsList.forEach(function (question) {\n            question.creator.dateMS = (new Date(question.creator.date).getTime());\n        });\n        answeredQuestionsList.sort(function (a, b) {\n            return a.creator.dateMS > b.creator.dateMS ? 1 : -1;\n        });\n        var i = 1;\n        answeredQuestionsList.forEach(function (question) {\n            areaQuestions.push({\n                date: new Date(question.creator.dateMS),\n                nAnswered: i,\n            });\n            i += 1;\n        });\n        return areaQuestions;\n    };\n    KnowledgebaseService.prototype.getChartsInfoArea = function (chartQuestionsDatas) {\n        var today = (new Date()).getTime();\n        var days = 30;\n        // Questions answered by date\n        var chartsPocessedDataByDate = [];\n        chartQuestionsDatas.forEach(function (chartQuestionsData) {\n            var processedDataByDate = [];\n            chartQuestionsData[0].forEach(function (question) {\n                var diff = today - (new Date(question.date)).getTime();\n                if (diff < days * 86400000) {\n                    processedDataByDate.push({\n                        date: new Date(question.date),\n                        inTime: question.x.onTime,\n                        outTime: question.x.late,\n                        received: question.x.received,\n                    });\n                }\n            });\n            chartsPocessedDataByDate.push([processedDataByDate, chartQuestionsData[1]]);\n        });\n        return chartsPocessedDataByDate;\n    };\n    KnowledgebaseService.prototype.getChartsInfoTimeResponse = function (chartsTimeResponseData) {\n        var today = (new Date()).getTime();\n        var days = 30;\n        // Charts Time Responses\n        var chartsProcessedData = [];\n        chartsTimeResponseData.forEach(function (chartTimeResponseData) {\n            var processedDataResponse = [];\n            var totalDays = 0;\n            var i = 0;\n            chartTimeResponseData.tableData.xdata.forEach(function (question) {\n                if (!question.date) {\n                    return;\n                }\n                var diff = today - (new Date(question.date)).getTime();\n                if (diff > days * 2 * 86400000) {\n                    return;\n                }\n                processedDataResponse.push({\n                    date: new Date(question.date),\n                    totalQuestionsArea: question.x.late + question.x.onTime,\n                    totalTimeResponseArea: question.x.totalTimeResponseArea,\n                    totalQuestionsCompany: question.x.totalQuestionsCompany,\n                    totalTimeResponseCompany: question.x.totalTimeResponseCompany,\n                    weekQuestionsArea: question.x.late + question.x.onTime,\n                    weekTimeResponseArea: question.x.totalTimeResponseArea,\n                    weekQuestionsCompany: question.x.totalQuestionsCompany,\n                    weekTimeResponseCompany: question.x.totalTimeResponseCompany,\n                });\n                i = totalDays;\n                while (i >= 0) {\n                    if ((processedDataResponse[totalDays].date.getTime() - processedDataResponse[i].date.getTime() < 7 * 86400000)) {\n                        if (i !== totalDays) {\n                            processedDataResponse[totalDays].weekQuestionsArea += processedDataResponse[i].totalQuestionsArea;\n                            processedDataResponse[totalDays].weekTimeResponseArea += processedDataResponse[i].totalTimeResponseArea;\n                            processedDataResponse[totalDays].weekQuestionsCompany += processedDataResponse[i].totalQuestionsCompany;\n                            processedDataResponse[totalDays].weekTimeResponseCompany += processedDataResponse[i].totalTimeResponseCompany;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                    i -= 1;\n                }\n                totalDays += 1;\n            });\n            chartsProcessedData.push([processedDataResponse, chartTimeResponseData.relation]);\n        });\n        return chartsProcessedData;\n    };\n    KnowledgebaseService.prototype.getInitialFeed = function () {\n        var _this = this;\n        return this.receiveFeedKB().map(function (data) {\n            _this.kbFeed = data;\n            _this.kbFeedSub.next(data);\n            return data;\n        });\n    };\n    KnowledgebaseService.prototype.getInitialStats = function () {\n        var _this = this;\n        return this.receiveStats().map(function (data) {\n            _this.kbStats = data;\n            _this.kbStatsSub.next(data);\n            return data;\n        });\n    };\n    KnowledgebaseService.prototype.makeChartHistorical = function (areaQuestions) {\n        var chartDataHistorical = {\n            chartType: 'AreaChart',\n            dataTable: [\n                ['Fecha', 'Preguntas Respondidas'],\n            ],\n            options: {\n                vAxis: {\n                    title: 'Respuestas',\n                    format: '0',\n                    width: '40px',\n                    textStyle: { color: '#203B53', fontSize: '12px', paddingRight: '100', marginRight: '100' },\n                },\n                hAxis: {\n                    slantedText: true,\n                    slantedTextAngle: 45,\n                    textStyle: { color: '#203B53', fontSize: '12px', paddingRight: '100', marginRight: '100' },\n                },\n                legend: 'bottom',\n                chartArea: {\n                    top: 40,\n                    height: '50%',\n                    width: '80%',\n                    left: 80,\n                },\n                colors: ['#3E97F0'],\n            },\n        };\n        areaQuestions.forEach(function (data_) {\n            chartDataHistorical.dataTable.push([\n                data_.date,\n                data_.nAnswered,\n            ]);\n        });\n        return chartDataHistorical;\n    };\n    KnowledgebaseService.prototype.makeChartsArea = function (chartsQuestionsData) {\n        // Questions answered by date\n        var chartsQuestions = [];\n        chartsQuestionsData.forEach(function (chartQuestionsData) {\n            var chartQuestions = {\n                title: \"Preguntas y respuestas \" + chartQuestionsData[1].name,\n                chartType: 'ComboChart',\n                dataTable: [\n                    ['Fecha', 'Respondidas a tiempo', 'Respondidas tarde', 'Preguntas Recibidas'],\n                ],\n                height: '100%',\n                options: {\n                    vAxis: {\n                        title: 'Respuestas',\n                        format: '0',\n                        width: '40px',\n                        textStyle: { color: '#203B53', fontSize: '12px', paddingRight: '100', marginRight: '100' },\n                    },\n                    hAxis: {\n                        title: 'Fechas',\n                        slantedText: true,\n                        slantedTextAngle: 45,\n                        textStyle: { color: '#203B53', fontSize: '12px', paddingRight: '100', marginRight: '100' },\n                    },\n                    seriesType: 'bars',\n                    height: '300px',\n                    series: { 2: { type: 'line' } },\n                    bar: { groupWidth: '80%' },\n                    legend: {\n                        position: 'bottom',\n                        width: '100%',\n                        textStyle: { fontSize: 10, paddingRight: '100', marginRight: '100', width: 'fit-content' },\n                        maxLines: 1,\n                    },\n                    legendArea: {\n                        width: '80%',\n                        format: '0',\n                    },\n                    chartArea: {\n                        top: 40,\n                        height: '50%',\n                        width: '80%',\n                        left: 80,\n                    },\n                    isStacked: true,\n                    pointSize: '4',\n                    borderRadius: '4px',\n                    colors: ['#3E97F0', '#FD4975', '#304D6A'],\n                },\n            };\n            chartQuestionsData[0].forEach(function (data_) {\n                // Fill empty days with 0\n                if (chartQuestions.dataTable.length > 1) {\n                    while (true) {\n                        var lastDate = new Date(chartQuestions.dataTable[chartQuestions.dataTable.length - 1][0]);\n                        if (data_.date.getTime() - lastDate.getTime() <= 86400000) {\n                            break;\n                        }\n                        lastDate = new Date(lastDate.getTime() + 86400000);\n                        chartQuestions.dataTable.push([\n                            lastDate,\n                            0,\n                            0,\n                            0,\n                        ]);\n                    }\n                }\n                // Push new info to graph\n                chartQuestions.dataTable.push([\n                    data_.date,\n                    data_.inTime,\n                    data_.outTime,\n                    data_.received,\n                ]);\n            });\n            chartsQuestions.push(chartQuestions);\n        });\n        return chartsQuestions;\n    };\n    KnowledgebaseService.prototype.makeChartSuperExpert = function (chartTimeResponseData) {\n        // Time Response Chart\n        var chartTimeResponse = {\n            chartType: 'LineChart',\n            title: \"Tiempo de Respuestas Promedio Semanal (en minutos) por area\",\n            dataTable: [\n                ['Fecha', 'Tiempo respuestas compañía'],\n            ],\n            height: '100%',\n            options: {\n                vAxis: {\n                    title: 'Tiempo Respuestas',\n                    format: '0',\n                    width: '40px',\n                    textStyle: { color: '#203B53', fontSize: '12px', paddingRight: '100', marginRight: '100' },\n                },\n                hAxis: {\n                    title: 'Fechas',\n                    slantedText: true,\n                    slantedTextAngle: 45,\n                    textStyle: { color: '#203B53', fontSize: '12px', paddingRight: '100', marginRight: '100' },\n                },\n                height: '300px',\n                legend: {\n                    position: 'bottom',\n                    width: '100%',\n                    textStyle: { fontSize: 10, paddingRight: '100', marginRight: '100', width: 'fit-content' },\n                    maxLines: 1,\n                },\n                legendArea: {\n                    width: '80%',\n                    format: '0',\n                },\n                chartArea: {\n                    top: 40,\n                    height: '50%',\n                    width: '80%',\n                    left: 80,\n                },\n                isStacked: true,\n                pointSize: '4',\n                borderRadius: '4px',\n                colors: ['#304D6A', '#3E97F0', '#FFCC00', '#11DD66'],\n            },\n        };\n        // Make one chart with the amount of Areas\n        var totalAreas = [];\n        chartTimeResponseData.forEach(function (timeResponseData) {\n            chartTimeResponse.dataTable[0].push(\"Tiempo de respuesta \" + timeResponseData[1].name);\n            totalAreas.push(0);\n        });\n        var allAreasTogether = {};\n        chartTimeResponseData.forEach(function (timeResponseData, i) {\n            for (var _i = 0, _a = timeResponseData[0]; _i < _a.length; _i++) {\n                var data_ = _a[_i];\n                if (!data_.date) {\n                    break;\n                }\n                var date = new Date(data_.date);\n                if (!data_.weekQuestionsArea) {\n                    data_.weekQuestionsArea = 1;\n                }\n                if (!data_.weekQuestionsCompany) {\n                    data_.weekQuestionsCompany = 1;\n                }\n                if (allAreasTogether[date.getTime()]) {\n                    allAreasTogether[date.getTime()][2][i] = Math.ceil(data_.weekTimeResponseArea / data_.weekQuestionsArea);\n                }\n                else {\n                    var areaTotal = Object.assign([], totalAreas);\n                    areaTotal[i] = Math.ceil(data_.weekTimeResponseArea / data_.weekQuestionsArea);\n                    allAreasTogether[date.getTime()] = [\n                        date,\n                        Math.ceil(data_.weekTimeResponseCompany / data_.weekQuestionsCompany),\n                        areaTotal,\n                    ];\n                }\n            }\n        });\n        var dataTable = [];\n        Object.keys(allAreasTogether).forEach(function (value) {\n            var content = [allAreasTogether[value][0], allAreasTogether[value][1]];\n            allAreasTogether[value][2].forEach(function (areaTotal) {\n                content.push(areaTotal);\n            });\n            dataTable.push(content);\n        });\n        dataTable.forEach(function (data) {\n            chartTimeResponse.dataTable.push(data);\n        });\n        return chartTimeResponse;\n    };\n    KnowledgebaseService.prototype.handleError = function (err) {\n        return Observable_1.Observable.throw(\"KBS was unable to retrieve data: \\\"\" + err.status + \" \" + err.statusText + \"\\\"\");\n    };\n    KnowledgebaseService = __decorate([\n        core_1.Injectable(),\n        __metadata(\"design:paramtypes\", [http_1.HttpClient])\n    ], KnowledgebaseService);\n    return KnowledgebaseService;\n}());\nexports.KnowledgebaseService = KnowledgebaseService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/app/features/knowledge-base/knowledge-base/knowledgebase.service.ts\n");

/***/ })

});